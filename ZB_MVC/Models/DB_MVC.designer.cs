#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.1
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace ZB_MVC.Models
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="EnergyMonitor")]
	public partial class DB_MVCDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region 可扩展性方法定义
    partial void OnCreated();
    partial void InsertAnalogHistory(AnalogHistory instance);
    partial void UpdateAnalogHistory(AnalogHistory instance);
    partial void DeleteAnalogHistory(AnalogHistory instance);
    partial void InsertAnalogInfo(AnalogInfo instance);
    partial void UpdateAnalogInfo(AnalogInfo instance);
    partial void DeleteAnalogInfo(AnalogInfo instance);
    partial void InsertAnalogMeasurePoint(AnalogMeasurePoint instance);
    partial void UpdateAnalogMeasurePoint(AnalogMeasurePoint instance);
    partial void DeleteAnalogMeasurePoint(AnalogMeasurePoint instance);
    partial void InsertBuildingBriefInfo(BuildingBriefInfo instance);
    partial void UpdateBuildingBriefInfo(BuildingBriefInfo instance);
    partial void DeleteBuildingBriefInfo(BuildingBriefInfo instance);
    partial void InsertPowerClass(PowerClass instance);
    partial void UpdatePowerClass(PowerClass instance);
    partial void DeletePowerClass(PowerClass instance);
    partial void InsertRoomInfo(RoomInfo instance);
    partial void UpdateRoomInfo(RoomInfo instance);
    partial void DeleteRoomInfo(RoomInfo instance);
    partial void InsertRTU(RTU instance);
    partial void UpdateRTU(RTU instance);
    partial void DeleteRTU(RTU instance);
    partial void InsertSchoolAreaInfo(SchoolAreaInfo instance);
    partial void UpdateSchoolAreaInfo(SchoolAreaInfo instance);
    partial void DeleteSchoolAreaInfo(SchoolAreaInfo instance);
    partial void InsertSchoolInfo(SchoolInfo instance);
    partial void UpdateSchoolInfo(SchoolInfo instance);
    partial void DeleteSchoolInfo(SchoolInfo instance);
    #endregion
		
		public DB_MVCDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["EnergyMonitorConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DB_MVCDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DB_MVCDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DB_MVCDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DB_MVCDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<AnalogHistory> AnalogHistories
		{
			get
			{
				return this.GetTable<AnalogHistory>();
			}
		}
		
		public System.Data.Linq.Table<AnalogInfo> AnalogInfos
		{
			get
			{
				return this.GetTable<AnalogInfo>();
			}
		}
		
		public System.Data.Linq.Table<AnalogMeasurePoint> AnalogMeasurePoints
		{
			get
			{
				return this.GetTable<AnalogMeasurePoint>();
			}
		}
		
		public System.Data.Linq.Table<BuildingBriefInfo> BuildingBriefInfos
		{
			get
			{
				return this.GetTable<BuildingBriefInfo>();
			}
		}
		
		public System.Data.Linq.Table<PowerClass> PowerClasses
		{
			get
			{
				return this.GetTable<PowerClass>();
			}
		}
		
		public System.Data.Linq.Table<RoomInfo> RoomInfos
		{
			get
			{
				return this.GetTable<RoomInfo>();
			}
		}
		
		public System.Data.Linq.Table<RTU> RTUs
		{
			get
			{
				return this.GetTable<RTU>();
			}
		}
		
		public System.Data.Linq.Table<SchoolAreaInfo> SchoolAreaInfos
		{
			get
			{
				return this.GetTable<SchoolAreaInfo>();
			}
		}
		
		public System.Data.Linq.Table<SchoolInfo> SchoolInfos
		{
			get
			{
				return this.GetTable<SchoolInfo>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AnalogHistory")]
	public partial class AnalogHistory : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _AH_AnalogNo;
		
		private System.DateTime _AH_Time;
		
		private double _AH_Value;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAH_AnalogNoChanging(int value);
    partial void OnAH_AnalogNoChanged();
    partial void OnAH_TimeChanging(System.DateTime value);
    partial void OnAH_TimeChanged();
    partial void OnAH_ValueChanging(double value);
    partial void OnAH_ValueChanged();
    #endregion
		
		public AnalogHistory()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AH_AnalogNo", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int AH_AnalogNo
		{
			get
			{
				return this._AH_AnalogNo;
			}
			set
			{
				if ((this._AH_AnalogNo != value))
				{
					this.OnAH_AnalogNoChanging(value);
					this.SendPropertyChanging();
					this._AH_AnalogNo = value;
					this.SendPropertyChanged("AH_AnalogNo");
					this.OnAH_AnalogNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AH_Time", DbType="DateTime NOT NULL", IsPrimaryKey=true)]
		public System.DateTime AH_Time
		{
			get
			{
				return this._AH_Time;
			}
			set
			{
				if ((this._AH_Time != value))
				{
					this.OnAH_TimeChanging(value);
					this.SendPropertyChanging();
					this._AH_Time = value;
					this.SendPropertyChanged("AH_Time");
					this.OnAH_TimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AH_Value", DbType="Float NOT NULL")]
		public double AH_Value
		{
			get
			{
				return this._AH_Value;
			}
			set
			{
				if ((this._AH_Value != value))
				{
					this.OnAH_ValueChanging(value);
					this.SendPropertyChanging();
					this._AH_Value = value;
					this.SendPropertyChanged("AH_Value");
					this.OnAH_ValueChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AnalogInfo")]
	public partial class AnalogInfo : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private short _RTU_No;
		
		private int _AI_No;
		
		private int _AI_Serial;
		
		private string _AI_Name;
		
		private double _AI_LogicalLow;
		
		private double _AI_LogicalUp;
		
		private byte _AI_Decimal;
		
		private byte _AI_Cptflag;
		
		private double _AI_Base;
		
		private double _AI_Rate;
		
		private System.Nullable<double> _AI_LockVal;
		
		private byte _AI_LockFlag;
		
		private byte _AI_Timespace;
		
		private string _AI_Unit;
		
		private byte _AI_State;
		
		private short _AI_Level;
		
		private byte _AI_Type;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRTU_NoChanging(short value);
    partial void OnRTU_NoChanged();
    partial void OnAI_NoChanging(int value);
    partial void OnAI_NoChanged();
    partial void OnAI_SerialChanging(int value);
    partial void OnAI_SerialChanged();
    partial void OnAI_NameChanging(string value);
    partial void OnAI_NameChanged();
    partial void OnAI_LogicalLowChanging(double value);
    partial void OnAI_LogicalLowChanged();
    partial void OnAI_LogicalUpChanging(double value);
    partial void OnAI_LogicalUpChanged();
    partial void OnAI_DecimalChanging(byte value);
    partial void OnAI_DecimalChanged();
    partial void OnAI_CptflagChanging(byte value);
    partial void OnAI_CptflagChanged();
    partial void OnAI_BaseChanging(double value);
    partial void OnAI_BaseChanged();
    partial void OnAI_RateChanging(double value);
    partial void OnAI_RateChanged();
    partial void OnAI_LockValChanging(System.Nullable<double> value);
    partial void OnAI_LockValChanged();
    partial void OnAI_LockFlagChanging(byte value);
    partial void OnAI_LockFlagChanged();
    partial void OnAI_TimespaceChanging(byte value);
    partial void OnAI_TimespaceChanged();
    partial void OnAI_UnitChanging(string value);
    partial void OnAI_UnitChanged();
    partial void OnAI_StateChanging(byte value);
    partial void OnAI_StateChanged();
    partial void OnAI_LevelChanging(short value);
    partial void OnAI_LevelChanged();
    partial void OnAI_TypeChanging(byte value);
    partial void OnAI_TypeChanged();
    #endregion
		
		public AnalogInfo()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RTU_No", DbType="SmallInt NOT NULL")]
		public short RTU_No
		{
			get
			{
				return this._RTU_No;
			}
			set
			{
				if ((this._RTU_No != value))
				{
					this.OnRTU_NoChanging(value);
					this.SendPropertyChanging();
					this._RTU_No = value;
					this.SendPropertyChanged("RTU_No");
					this.OnRTU_NoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AI_No", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int AI_No
		{
			get
			{
				return this._AI_No;
			}
			set
			{
				if ((this._AI_No != value))
				{
					this.OnAI_NoChanging(value);
					this.SendPropertyChanging();
					this._AI_No = value;
					this.SendPropertyChanged("AI_No");
					this.OnAI_NoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AI_Serial", DbType="Int NOT NULL")]
		public int AI_Serial
		{
			get
			{
				return this._AI_Serial;
			}
			set
			{
				if ((this._AI_Serial != value))
				{
					this.OnAI_SerialChanging(value);
					this.SendPropertyChanging();
					this._AI_Serial = value;
					this.SendPropertyChanged("AI_Serial");
					this.OnAI_SerialChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AI_Name", DbType="VarChar(500) NOT NULL", CanBeNull=false)]
		public string AI_Name
		{
			get
			{
				return this._AI_Name;
			}
			set
			{
				if ((this._AI_Name != value))
				{
					this.OnAI_NameChanging(value);
					this.SendPropertyChanging();
					this._AI_Name = value;
					this.SendPropertyChanged("AI_Name");
					this.OnAI_NameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AI_LogicalLow", DbType="Float NOT NULL")]
		public double AI_LogicalLow
		{
			get
			{
				return this._AI_LogicalLow;
			}
			set
			{
				if ((this._AI_LogicalLow != value))
				{
					this.OnAI_LogicalLowChanging(value);
					this.SendPropertyChanging();
					this._AI_LogicalLow = value;
					this.SendPropertyChanged("AI_LogicalLow");
					this.OnAI_LogicalLowChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AI_LogicalUp", DbType="Float NOT NULL")]
		public double AI_LogicalUp
		{
			get
			{
				return this._AI_LogicalUp;
			}
			set
			{
				if ((this._AI_LogicalUp != value))
				{
					this.OnAI_LogicalUpChanging(value);
					this.SendPropertyChanging();
					this._AI_LogicalUp = value;
					this.SendPropertyChanged("AI_LogicalUp");
					this.OnAI_LogicalUpChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AI_Decimal", DbType="TinyInt NOT NULL")]
		public byte AI_Decimal
		{
			get
			{
				return this._AI_Decimal;
			}
			set
			{
				if ((this._AI_Decimal != value))
				{
					this.OnAI_DecimalChanging(value);
					this.SendPropertyChanging();
					this._AI_Decimal = value;
					this.SendPropertyChanged("AI_Decimal");
					this.OnAI_DecimalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AI_Cptflag", DbType="TinyInt NOT NULL")]
		public byte AI_Cptflag
		{
			get
			{
				return this._AI_Cptflag;
			}
			set
			{
				if ((this._AI_Cptflag != value))
				{
					this.OnAI_CptflagChanging(value);
					this.SendPropertyChanging();
					this._AI_Cptflag = value;
					this.SendPropertyChanged("AI_Cptflag");
					this.OnAI_CptflagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AI_Base", DbType="Float NOT NULL")]
		public double AI_Base
		{
			get
			{
				return this._AI_Base;
			}
			set
			{
				if ((this._AI_Base != value))
				{
					this.OnAI_BaseChanging(value);
					this.SendPropertyChanging();
					this._AI_Base = value;
					this.SendPropertyChanged("AI_Base");
					this.OnAI_BaseChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AI_Rate", DbType="Float NOT NULL")]
		public double AI_Rate
		{
			get
			{
				return this._AI_Rate;
			}
			set
			{
				if ((this._AI_Rate != value))
				{
					this.OnAI_RateChanging(value);
					this.SendPropertyChanging();
					this._AI_Rate = value;
					this.SendPropertyChanged("AI_Rate");
					this.OnAI_RateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AI_LockVal", DbType="Float")]
		public System.Nullable<double> AI_LockVal
		{
			get
			{
				return this._AI_LockVal;
			}
			set
			{
				if ((this._AI_LockVal != value))
				{
					this.OnAI_LockValChanging(value);
					this.SendPropertyChanging();
					this._AI_LockVal = value;
					this.SendPropertyChanged("AI_LockVal");
					this.OnAI_LockValChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AI_LockFlag", DbType="TinyInt NOT NULL")]
		public byte AI_LockFlag
		{
			get
			{
				return this._AI_LockFlag;
			}
			set
			{
				if ((this._AI_LockFlag != value))
				{
					this.OnAI_LockFlagChanging(value);
					this.SendPropertyChanging();
					this._AI_LockFlag = value;
					this.SendPropertyChanged("AI_LockFlag");
					this.OnAI_LockFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AI_Timespace", DbType="TinyInt NOT NULL")]
		public byte AI_Timespace
		{
			get
			{
				return this._AI_Timespace;
			}
			set
			{
				if ((this._AI_Timespace != value))
				{
					this.OnAI_TimespaceChanging(value);
					this.SendPropertyChanging();
					this._AI_Timespace = value;
					this.SendPropertyChanged("AI_Timespace");
					this.OnAI_TimespaceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AI_Unit", DbType="VarChar(500)")]
		public string AI_Unit
		{
			get
			{
				return this._AI_Unit;
			}
			set
			{
				if ((this._AI_Unit != value))
				{
					this.OnAI_UnitChanging(value);
					this.SendPropertyChanging();
					this._AI_Unit = value;
					this.SendPropertyChanged("AI_Unit");
					this.OnAI_UnitChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AI_State", DbType="TinyInt NOT NULL")]
		public byte AI_State
		{
			get
			{
				return this._AI_State;
			}
			set
			{
				if ((this._AI_State != value))
				{
					this.OnAI_StateChanging(value);
					this.SendPropertyChanging();
					this._AI_State = value;
					this.SendPropertyChanged("AI_State");
					this.OnAI_StateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AI_Level", DbType="SmallInt NOT NULL")]
		public short AI_Level
		{
			get
			{
				return this._AI_Level;
			}
			set
			{
				if ((this._AI_Level != value))
				{
					this.OnAI_LevelChanging(value);
					this.SendPropertyChanging();
					this._AI_Level = value;
					this.SendPropertyChanged("AI_Level");
					this.OnAI_LevelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AI_Type", DbType="TinyInt NOT NULL")]
		public byte AI_Type
		{
			get
			{
				return this._AI_Type;
			}
			set
			{
				if ((this._AI_Type != value))
				{
					this.OnAI_TypeChanging(value);
					this.SendPropertyChanging();
					this._AI_Type = value;
					this.SendPropertyChanged("AI_Type");
					this.OnAI_TypeChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AnalogMeasurePoint")]
	public partial class AnalogMeasurePoint : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _AMP_AnalogNo;
		
		private string _AMP_Name;
		
		private byte _AMP_CptFlag;
		
		private byte _AMP_Statistic;
		
		private System.DateTime _AMP_Date;
		
		private double _AMP_Val;
		
		private System.Nullable<double> _AMP_ValRem;
		
		private string _AMP_Unit;
		
		private System.Nullable<int> _AMP_SchooldID;
		
		private System.Nullable<int> _AMP_SAreaID;
		
		private System.Nullable<int> _AMP_BuildingID;
		
		private System.Nullable<int> _AMP_RoomID;
		
		private System.Nullable<int> _AMP_DepartID;
		
		private string _AMP_PowerType;
		
		private string _AMP_PowerName;
		
		private byte _AMP_Timespan;
		
		private System.Nullable<int> _AMP_ParentNo;
		
		private string _AMP_OperationRule;
		
		private System.Nullable<double> _AMP_OperationParameter;
		
		private bool _AMP_State;
		
		private string _AMP_Encoding;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAMP_AnalogNoChanging(int value);
    partial void OnAMP_AnalogNoChanged();
    partial void OnAMP_NameChanging(string value);
    partial void OnAMP_NameChanged();
    partial void OnAMP_CptFlagChanging(byte value);
    partial void OnAMP_CptFlagChanged();
    partial void OnAMP_StatisticChanging(byte value);
    partial void OnAMP_StatisticChanged();
    partial void OnAMP_DateChanging(System.DateTime value);
    partial void OnAMP_DateChanged();
    partial void OnAMP_ValChanging(double value);
    partial void OnAMP_ValChanged();
    partial void OnAMP_ValRemChanging(System.Nullable<double> value);
    partial void OnAMP_ValRemChanged();
    partial void OnAMP_UnitChanging(string value);
    partial void OnAMP_UnitChanged();
    partial void OnAMP_SchooldIDChanging(System.Nullable<int> value);
    partial void OnAMP_SchooldIDChanged();
    partial void OnAMP_SAreaIDChanging(System.Nullable<int> value);
    partial void OnAMP_SAreaIDChanged();
    partial void OnAMP_BuildingIDChanging(System.Nullable<int> value);
    partial void OnAMP_BuildingIDChanged();
    partial void OnAMP_RoomIDChanging(System.Nullable<int> value);
    partial void OnAMP_RoomIDChanged();
    partial void OnAMP_DepartIDChanging(System.Nullable<int> value);
    partial void OnAMP_DepartIDChanged();
    partial void OnAMP_PowerTypeChanging(string value);
    partial void OnAMP_PowerTypeChanged();
    partial void OnAMP_PowerNameChanging(string value);
    partial void OnAMP_PowerNameChanged();
    partial void OnAMP_TimespanChanging(byte value);
    partial void OnAMP_TimespanChanged();
    partial void OnAMP_ParentNoChanging(System.Nullable<int> value);
    partial void OnAMP_ParentNoChanged();
    partial void OnAMP_OperationRuleChanging(string value);
    partial void OnAMP_OperationRuleChanged();
    partial void OnAMP_OperationParameterChanging(System.Nullable<double> value);
    partial void OnAMP_OperationParameterChanged();
    partial void OnAMP_StateChanging(bool value);
    partial void OnAMP_StateChanged();
    partial void OnAMP_EncodingChanging(string value);
    partial void OnAMP_EncodingChanged();
    #endregion
		
		public AnalogMeasurePoint()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AMP_AnalogNo", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int AMP_AnalogNo
		{
			get
			{
				return this._AMP_AnalogNo;
			}
			set
			{
				if ((this._AMP_AnalogNo != value))
				{
					this.OnAMP_AnalogNoChanging(value);
					this.SendPropertyChanging();
					this._AMP_AnalogNo = value;
					this.SendPropertyChanged("AMP_AnalogNo");
					this.OnAMP_AnalogNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AMP_Name", DbType="VarChar(500) NOT NULL", CanBeNull=false)]
		public string AMP_Name
		{
			get
			{
				return this._AMP_Name;
			}
			set
			{
				if ((this._AMP_Name != value))
				{
					this.OnAMP_NameChanging(value);
					this.SendPropertyChanging();
					this._AMP_Name = value;
					this.SendPropertyChanged("AMP_Name");
					this.OnAMP_NameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AMP_CptFlag", DbType="TinyInt NOT NULL")]
		public byte AMP_CptFlag
		{
			get
			{
				return this._AMP_CptFlag;
			}
			set
			{
				if ((this._AMP_CptFlag != value))
				{
					this.OnAMP_CptFlagChanging(value);
					this.SendPropertyChanging();
					this._AMP_CptFlag = value;
					this.SendPropertyChanged("AMP_CptFlag");
					this.OnAMP_CptFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AMP_Statistic", DbType="TinyInt NOT NULL")]
		public byte AMP_Statistic
		{
			get
			{
				return this._AMP_Statistic;
			}
			set
			{
				if ((this._AMP_Statistic != value))
				{
					this.OnAMP_StatisticChanging(value);
					this.SendPropertyChanging();
					this._AMP_Statistic = value;
					this.SendPropertyChanged("AMP_Statistic");
					this.OnAMP_StatisticChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AMP_Date", DbType="DateTime NOT NULL")]
		public System.DateTime AMP_Date
		{
			get
			{
				return this._AMP_Date;
			}
			set
			{
				if ((this._AMP_Date != value))
				{
					this.OnAMP_DateChanging(value);
					this.SendPropertyChanging();
					this._AMP_Date = value;
					this.SendPropertyChanged("AMP_Date");
					this.OnAMP_DateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AMP_Val", DbType="Float NOT NULL")]
		public double AMP_Val
		{
			get
			{
				return this._AMP_Val;
			}
			set
			{
				if ((this._AMP_Val != value))
				{
					this.OnAMP_ValChanging(value);
					this.SendPropertyChanging();
					this._AMP_Val = value;
					this.SendPropertyChanged("AMP_Val");
					this.OnAMP_ValChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AMP_ValRem", DbType="Float")]
		public System.Nullable<double> AMP_ValRem
		{
			get
			{
				return this._AMP_ValRem;
			}
			set
			{
				if ((this._AMP_ValRem != value))
				{
					this.OnAMP_ValRemChanging(value);
					this.SendPropertyChanging();
					this._AMP_ValRem = value;
					this.SendPropertyChanged("AMP_ValRem");
					this.OnAMP_ValRemChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AMP_Unit", DbType="VarChar(500) NOT NULL", CanBeNull=false)]
		public string AMP_Unit
		{
			get
			{
				return this._AMP_Unit;
			}
			set
			{
				if ((this._AMP_Unit != value))
				{
					this.OnAMP_UnitChanging(value);
					this.SendPropertyChanging();
					this._AMP_Unit = value;
					this.SendPropertyChanged("AMP_Unit");
					this.OnAMP_UnitChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AMP_SchooldID", DbType="Int")]
		public System.Nullable<int> AMP_SchooldID
		{
			get
			{
				return this._AMP_SchooldID;
			}
			set
			{
				if ((this._AMP_SchooldID != value))
				{
					this.OnAMP_SchooldIDChanging(value);
					this.SendPropertyChanging();
					this._AMP_SchooldID = value;
					this.SendPropertyChanged("AMP_SchooldID");
					this.OnAMP_SchooldIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AMP_SAreaID", DbType="Int")]
		public System.Nullable<int> AMP_SAreaID
		{
			get
			{
				return this._AMP_SAreaID;
			}
			set
			{
				if ((this._AMP_SAreaID != value))
				{
					this.OnAMP_SAreaIDChanging(value);
					this.SendPropertyChanging();
					this._AMP_SAreaID = value;
					this.SendPropertyChanged("AMP_SAreaID");
					this.OnAMP_SAreaIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AMP_BuildingID", DbType="Int")]
		public System.Nullable<int> AMP_BuildingID
		{
			get
			{
				return this._AMP_BuildingID;
			}
			set
			{
				if ((this._AMP_BuildingID != value))
				{
					this.OnAMP_BuildingIDChanging(value);
					this.SendPropertyChanging();
					this._AMP_BuildingID = value;
					this.SendPropertyChanged("AMP_BuildingID");
					this.OnAMP_BuildingIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AMP_RoomID", DbType="Int")]
		public System.Nullable<int> AMP_RoomID
		{
			get
			{
				return this._AMP_RoomID;
			}
			set
			{
				if ((this._AMP_RoomID != value))
				{
					this.OnAMP_RoomIDChanging(value);
					this.SendPropertyChanging();
					this._AMP_RoomID = value;
					this.SendPropertyChanged("AMP_RoomID");
					this.OnAMP_RoomIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AMP_DepartID", DbType="Int")]
		public System.Nullable<int> AMP_DepartID
		{
			get
			{
				return this._AMP_DepartID;
			}
			set
			{
				if ((this._AMP_DepartID != value))
				{
					this.OnAMP_DepartIDChanging(value);
					this.SendPropertyChanging();
					this._AMP_DepartID = value;
					this.SendPropertyChanged("AMP_DepartID");
					this.OnAMP_DepartIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AMP_PowerType", DbType="VarChar(500) NOT NULL", CanBeNull=false)]
		public string AMP_PowerType
		{
			get
			{
				return this._AMP_PowerType;
			}
			set
			{
				if ((this._AMP_PowerType != value))
				{
					this.OnAMP_PowerTypeChanging(value);
					this.SendPropertyChanging();
					this._AMP_PowerType = value;
					this.SendPropertyChanged("AMP_PowerType");
					this.OnAMP_PowerTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AMP_PowerName", DbType="VarChar(500) NOT NULL", CanBeNull=false)]
		public string AMP_PowerName
		{
			get
			{
				return this._AMP_PowerName;
			}
			set
			{
				if ((this._AMP_PowerName != value))
				{
					this.OnAMP_PowerNameChanging(value);
					this.SendPropertyChanging();
					this._AMP_PowerName = value;
					this.SendPropertyChanged("AMP_PowerName");
					this.OnAMP_PowerNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AMP_Timespan", DbType="TinyInt NOT NULL")]
		public byte AMP_Timespan
		{
			get
			{
				return this._AMP_Timespan;
			}
			set
			{
				if ((this._AMP_Timespan != value))
				{
					this.OnAMP_TimespanChanging(value);
					this.SendPropertyChanging();
					this._AMP_Timespan = value;
					this.SendPropertyChanged("AMP_Timespan");
					this.OnAMP_TimespanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AMP_ParentNo", DbType="Int")]
		public System.Nullable<int> AMP_ParentNo
		{
			get
			{
				return this._AMP_ParentNo;
			}
			set
			{
				if ((this._AMP_ParentNo != value))
				{
					this.OnAMP_ParentNoChanging(value);
					this.SendPropertyChanging();
					this._AMP_ParentNo = value;
					this.SendPropertyChanged("AMP_ParentNo");
					this.OnAMP_ParentNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AMP_OperationRule", DbType="VarChar(500)")]
		public string AMP_OperationRule
		{
			get
			{
				return this._AMP_OperationRule;
			}
			set
			{
				if ((this._AMP_OperationRule != value))
				{
					this.OnAMP_OperationRuleChanging(value);
					this.SendPropertyChanging();
					this._AMP_OperationRule = value;
					this.SendPropertyChanged("AMP_OperationRule");
					this.OnAMP_OperationRuleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AMP_OperationParameter", DbType="Float")]
		public System.Nullable<double> AMP_OperationParameter
		{
			get
			{
				return this._AMP_OperationParameter;
			}
			set
			{
				if ((this._AMP_OperationParameter != value))
				{
					this.OnAMP_OperationParameterChanging(value);
					this.SendPropertyChanging();
					this._AMP_OperationParameter = value;
					this.SendPropertyChanged("AMP_OperationParameter");
					this.OnAMP_OperationParameterChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AMP_State", DbType="Bit NOT NULL")]
		public bool AMP_State
		{
			get
			{
				return this._AMP_State;
			}
			set
			{
				if ((this._AMP_State != value))
				{
					this.OnAMP_StateChanging(value);
					this.SendPropertyChanging();
					this._AMP_State = value;
					this.SendPropertyChanged("AMP_State");
					this.OnAMP_StateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AMP_Encoding", DbType="VarChar(500)")]
		public string AMP_Encoding
		{
			get
			{
				return this._AMP_Encoding;
			}
			set
			{
				if ((this._AMP_Encoding != value))
				{
					this.OnAMP_EncodingChanging(value);
					this.SendPropertyChanging();
					this._AMP_Encoding = value;
					this.SendPropertyChanged("AMP_Encoding");
					this.OnAMP_EncodingChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.BuildingBriefInfo")]
	public partial class BuildingBriefInfo : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _BDI_ID;
		
		private string _BDI_Name;
		
		private int _SAI_ID;
		
		private byte _BDI_Flag;
		
		private System.Nullable<byte> _BDI_HJFlag;
		
		private string _BDI_OperateRule;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnBDI_IDChanging(int value);
    partial void OnBDI_IDChanged();
    partial void OnBDI_NameChanging(string value);
    partial void OnBDI_NameChanged();
    partial void OnSAI_IDChanging(int value);
    partial void OnSAI_IDChanged();
    partial void OnBDI_FlagChanging(byte value);
    partial void OnBDI_FlagChanged();
    partial void OnBDI_HJFlagChanging(System.Nullable<byte> value);
    partial void OnBDI_HJFlagChanged();
    partial void OnBDI_OperateRuleChanging(string value);
    partial void OnBDI_OperateRuleChanged();
    #endregion
		
		public BuildingBriefInfo()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BDI_ID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int BDI_ID
		{
			get
			{
				return this._BDI_ID;
			}
			set
			{
				if ((this._BDI_ID != value))
				{
					this.OnBDI_IDChanging(value);
					this.SendPropertyChanging();
					this._BDI_ID = value;
					this.SendPropertyChanged("BDI_ID");
					this.OnBDI_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BDI_Name", DbType="VarChar(500) NOT NULL", CanBeNull=false)]
		public string BDI_Name
		{
			get
			{
				return this._BDI_Name;
			}
			set
			{
				if ((this._BDI_Name != value))
				{
					this.OnBDI_NameChanging(value);
					this.SendPropertyChanging();
					this._BDI_Name = value;
					this.SendPropertyChanged("BDI_Name");
					this.OnBDI_NameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SAI_ID", DbType="Int NOT NULL")]
		public int SAI_ID
		{
			get
			{
				return this._SAI_ID;
			}
			set
			{
				if ((this._SAI_ID != value))
				{
					this.OnSAI_IDChanging(value);
					this.SendPropertyChanging();
					this._SAI_ID = value;
					this.SendPropertyChanged("SAI_ID");
					this.OnSAI_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BDI_Flag", DbType="TinyInt NOT NULL")]
		public byte BDI_Flag
		{
			get
			{
				return this._BDI_Flag;
			}
			set
			{
				if ((this._BDI_Flag != value))
				{
					this.OnBDI_FlagChanging(value);
					this.SendPropertyChanging();
					this._BDI_Flag = value;
					this.SendPropertyChanged("BDI_Flag");
					this.OnBDI_FlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BDI_HJFlag", DbType="TinyInt")]
		public System.Nullable<byte> BDI_HJFlag
		{
			get
			{
				return this._BDI_HJFlag;
			}
			set
			{
				if ((this._BDI_HJFlag != value))
				{
					this.OnBDI_HJFlagChanging(value);
					this.SendPropertyChanging();
					this._BDI_HJFlag = value;
					this.SendPropertyChanged("BDI_HJFlag");
					this.OnBDI_HJFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BDI_OperateRule", DbType="VarChar(100)")]
		public string BDI_OperateRule
		{
			get
			{
				return this._BDI_OperateRule;
			}
			set
			{
				if ((this._BDI_OperateRule != value))
				{
					this.OnBDI_OperateRuleChanging(value);
					this.SendPropertyChanging();
					this._BDI_OperateRule = value;
					this.SendPropertyChanged("BDI_OperateRule");
					this.OnBDI_OperateRuleChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PowerClass")]
	public partial class PowerClass : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _PC_ID;
		
		private string _PC_Name;
		
		private string _PC_Type;
		
		private string _PC_LocalCode;
		
		private string _PC_Unit;
		
		private string _PC_Remark;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPC_IDChanging(string value);
    partial void OnPC_IDChanged();
    partial void OnPC_NameChanging(string value);
    partial void OnPC_NameChanged();
    partial void OnPC_TypeChanging(string value);
    partial void OnPC_TypeChanged();
    partial void OnPC_LocalCodeChanging(string value);
    partial void OnPC_LocalCodeChanged();
    partial void OnPC_UnitChanging(string value);
    partial void OnPC_UnitChanged();
    partial void OnPC_RemarkChanging(string value);
    partial void OnPC_RemarkChanged();
    #endregion
		
		public PowerClass()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PC_ID", DbType="VarChar(500) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string PC_ID
		{
			get
			{
				return this._PC_ID;
			}
			set
			{
				if ((this._PC_ID != value))
				{
					this.OnPC_IDChanging(value);
					this.SendPropertyChanging();
					this._PC_ID = value;
					this.SendPropertyChanged("PC_ID");
					this.OnPC_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PC_Name", DbType="VarChar(500) NOT NULL", CanBeNull=false)]
		public string PC_Name
		{
			get
			{
				return this._PC_Name;
			}
			set
			{
				if ((this._PC_Name != value))
				{
					this.OnPC_NameChanging(value);
					this.SendPropertyChanging();
					this._PC_Name = value;
					this.SendPropertyChanged("PC_Name");
					this.OnPC_NameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PC_Type", DbType="VarChar(500) NOT NULL", CanBeNull=false)]
		public string PC_Type
		{
			get
			{
				return this._PC_Type;
			}
			set
			{
				if ((this._PC_Type != value))
				{
					this.OnPC_TypeChanging(value);
					this.SendPropertyChanging();
					this._PC_Type = value;
					this.SendPropertyChanged("PC_Type");
					this.OnPC_TypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PC_LocalCode", DbType="VarChar(500) NOT NULL", CanBeNull=false)]
		public string PC_LocalCode
		{
			get
			{
				return this._PC_LocalCode;
			}
			set
			{
				if ((this._PC_LocalCode != value))
				{
					this.OnPC_LocalCodeChanging(value);
					this.SendPropertyChanging();
					this._PC_LocalCode = value;
					this.SendPropertyChanged("PC_LocalCode");
					this.OnPC_LocalCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PC_Unit", DbType="VarChar(500) NOT NULL", CanBeNull=false)]
		public string PC_Unit
		{
			get
			{
				return this._PC_Unit;
			}
			set
			{
				if ((this._PC_Unit != value))
				{
					this.OnPC_UnitChanging(value);
					this.SendPropertyChanging();
					this._PC_Unit = value;
					this.SendPropertyChanged("PC_Unit");
					this.OnPC_UnitChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PC_Remark", DbType="VarChar(500)")]
		public string PC_Remark
		{
			get
			{
				return this._PC_Remark;
			}
			set
			{
				if ((this._PC_Remark != value))
				{
					this.OnPC_RemarkChanging(value);
					this.SendPropertyChanging();
					this._PC_Remark = value;
					this.SendPropertyChanged("PC_Remark");
					this.OnPC_RemarkChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.RoomInfo")]
	public partial class RoomInfo : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RI_ID;
		
		private string _RI_SerialCode;
		
		private string _RI_RoomCode;
		
		private int _BDI_ID;
		
		private System.Nullable<int> _RI_Floor;
		
		private string _RI_Remark;
		
		private System.Nullable<int> _RI_LogOperator;
		
		private System.Nullable<System.DateTime> _RI_CreateDate;
		
		private System.Nullable<int> _RI_UpdateOperator;
		
		private System.Nullable<System.DateTime> _RI_UpdateDate;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRI_IDChanging(int value);
    partial void OnRI_IDChanged();
    partial void OnRI_SerialCodeChanging(string value);
    partial void OnRI_SerialCodeChanged();
    partial void OnRI_RoomCodeChanging(string value);
    partial void OnRI_RoomCodeChanged();
    partial void OnBDI_IDChanging(int value);
    partial void OnBDI_IDChanged();
    partial void OnRI_FloorChanging(System.Nullable<int> value);
    partial void OnRI_FloorChanged();
    partial void OnRI_RemarkChanging(string value);
    partial void OnRI_RemarkChanged();
    partial void OnRI_LogOperatorChanging(System.Nullable<int> value);
    partial void OnRI_LogOperatorChanged();
    partial void OnRI_CreateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnRI_CreateDateChanged();
    partial void OnRI_UpdateOperatorChanging(System.Nullable<int> value);
    partial void OnRI_UpdateOperatorChanged();
    partial void OnRI_UpdateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnRI_UpdateDateChanged();
    #endregion
		
		public RoomInfo()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RI_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int RI_ID
		{
			get
			{
				return this._RI_ID;
			}
			set
			{
				if ((this._RI_ID != value))
				{
					this.OnRI_IDChanging(value);
					this.SendPropertyChanging();
					this._RI_ID = value;
					this.SendPropertyChanged("RI_ID");
					this.OnRI_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RI_SerialCode", DbType="VarChar(500)")]
		public string RI_SerialCode
		{
			get
			{
				return this._RI_SerialCode;
			}
			set
			{
				if ((this._RI_SerialCode != value))
				{
					this.OnRI_SerialCodeChanging(value);
					this.SendPropertyChanging();
					this._RI_SerialCode = value;
					this.SendPropertyChanged("RI_SerialCode");
					this.OnRI_SerialCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RI_RoomCode", DbType="VarChar(500) NOT NULL", CanBeNull=false)]
		public string RI_RoomCode
		{
			get
			{
				return this._RI_RoomCode;
			}
			set
			{
				if ((this._RI_RoomCode != value))
				{
					this.OnRI_RoomCodeChanging(value);
					this.SendPropertyChanging();
					this._RI_RoomCode = value;
					this.SendPropertyChanged("RI_RoomCode");
					this.OnRI_RoomCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BDI_ID", DbType="Int NOT NULL")]
		public int BDI_ID
		{
			get
			{
				return this._BDI_ID;
			}
			set
			{
				if ((this._BDI_ID != value))
				{
					this.OnBDI_IDChanging(value);
					this.SendPropertyChanging();
					this._BDI_ID = value;
					this.SendPropertyChanged("BDI_ID");
					this.OnBDI_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RI_Floor", DbType="Int")]
		public System.Nullable<int> RI_Floor
		{
			get
			{
				return this._RI_Floor;
			}
			set
			{
				if ((this._RI_Floor != value))
				{
					this.OnRI_FloorChanging(value);
					this.SendPropertyChanging();
					this._RI_Floor = value;
					this.SendPropertyChanged("RI_Floor");
					this.OnRI_FloorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RI_Remark", DbType="VarChar(500)")]
		public string RI_Remark
		{
			get
			{
				return this._RI_Remark;
			}
			set
			{
				if ((this._RI_Remark != value))
				{
					this.OnRI_RemarkChanging(value);
					this.SendPropertyChanging();
					this._RI_Remark = value;
					this.SendPropertyChanged("RI_Remark");
					this.OnRI_RemarkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RI_LogOperator", DbType="Int")]
		public System.Nullable<int> RI_LogOperator
		{
			get
			{
				return this._RI_LogOperator;
			}
			set
			{
				if ((this._RI_LogOperator != value))
				{
					this.OnRI_LogOperatorChanging(value);
					this.SendPropertyChanging();
					this._RI_LogOperator = value;
					this.SendPropertyChanged("RI_LogOperator");
					this.OnRI_LogOperatorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RI_CreateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> RI_CreateDate
		{
			get
			{
				return this._RI_CreateDate;
			}
			set
			{
				if ((this._RI_CreateDate != value))
				{
					this.OnRI_CreateDateChanging(value);
					this.SendPropertyChanging();
					this._RI_CreateDate = value;
					this.SendPropertyChanged("RI_CreateDate");
					this.OnRI_CreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RI_UpdateOperator", DbType="Int")]
		public System.Nullable<int> RI_UpdateOperator
		{
			get
			{
				return this._RI_UpdateOperator;
			}
			set
			{
				if ((this._RI_UpdateOperator != value))
				{
					this.OnRI_UpdateOperatorChanging(value);
					this.SendPropertyChanging();
					this._RI_UpdateOperator = value;
					this.SendPropertyChanged("RI_UpdateOperator");
					this.OnRI_UpdateOperatorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RI_UpdateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> RI_UpdateDate
		{
			get
			{
				return this._RI_UpdateDate;
			}
			set
			{
				if ((this._RI_UpdateDate != value))
				{
					this.OnRI_UpdateDateChanging(value);
					this.SendPropertyChanging();
					this._RI_UpdateDate = value;
					this.SendPropertyChanged("RI_UpdateDate");
					this.OnRI_UpdateDateChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.RTU")]
	public partial class RTU : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private short _RTU_No;
		
		private string _RTU_Name;
		
		private string _RTU_Info;
		
		private System.Nullable<short> _RTU_MaxAI;
		
		private System.Nullable<short> _RTU_MaxDI;
		
		private byte _RTU_State;
		
		private byte _RTU_WSNO;
		
		private short _RTU_ChanSerial;
		
		private short _RTU_Serial;
		
		private System.Nullable<short> _RTU_StaNo;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRTU_NoChanging(short value);
    partial void OnRTU_NoChanged();
    partial void OnRTU_NameChanging(string value);
    partial void OnRTU_NameChanged();
    partial void OnRTU_InfoChanging(string value);
    partial void OnRTU_InfoChanged();
    partial void OnRTU_MaxAIChanging(System.Nullable<short> value);
    partial void OnRTU_MaxAIChanged();
    partial void OnRTU_MaxDIChanging(System.Nullable<short> value);
    partial void OnRTU_MaxDIChanged();
    partial void OnRTU_StateChanging(byte value);
    partial void OnRTU_StateChanged();
    partial void OnRTU_WSNOChanging(byte value);
    partial void OnRTU_WSNOChanged();
    partial void OnRTU_ChanSerialChanging(short value);
    partial void OnRTU_ChanSerialChanged();
    partial void OnRTU_SerialChanging(short value);
    partial void OnRTU_SerialChanged();
    partial void OnRTU_StaNoChanging(System.Nullable<short> value);
    partial void OnRTU_StaNoChanged();
    #endregion
		
		public RTU()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RTU_No", AutoSync=AutoSync.OnInsert, DbType="SmallInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public short RTU_No
		{
			get
			{
				return this._RTU_No;
			}
			set
			{
				if ((this._RTU_No != value))
				{
					this.OnRTU_NoChanging(value);
					this.SendPropertyChanging();
					this._RTU_No = value;
					this.SendPropertyChanged("RTU_No");
					this.OnRTU_NoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RTU_Name", DbType="VarChar(500)")]
		public string RTU_Name
		{
			get
			{
				return this._RTU_Name;
			}
			set
			{
				if ((this._RTU_Name != value))
				{
					this.OnRTU_NameChanging(value);
					this.SendPropertyChanging();
					this._RTU_Name = value;
					this.SendPropertyChanged("RTU_Name");
					this.OnRTU_NameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RTU_Info", DbType="VarChar(500)")]
		public string RTU_Info
		{
			get
			{
				return this._RTU_Info;
			}
			set
			{
				if ((this._RTU_Info != value))
				{
					this.OnRTU_InfoChanging(value);
					this.SendPropertyChanging();
					this._RTU_Info = value;
					this.SendPropertyChanged("RTU_Info");
					this.OnRTU_InfoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RTU_MaxAI", DbType="SmallInt")]
		public System.Nullable<short> RTU_MaxAI
		{
			get
			{
				return this._RTU_MaxAI;
			}
			set
			{
				if ((this._RTU_MaxAI != value))
				{
					this.OnRTU_MaxAIChanging(value);
					this.SendPropertyChanging();
					this._RTU_MaxAI = value;
					this.SendPropertyChanged("RTU_MaxAI");
					this.OnRTU_MaxAIChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RTU_MaxDI", DbType="SmallInt")]
		public System.Nullable<short> RTU_MaxDI
		{
			get
			{
				return this._RTU_MaxDI;
			}
			set
			{
				if ((this._RTU_MaxDI != value))
				{
					this.OnRTU_MaxDIChanging(value);
					this.SendPropertyChanging();
					this._RTU_MaxDI = value;
					this.SendPropertyChanged("RTU_MaxDI");
					this.OnRTU_MaxDIChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RTU_State", DbType="TinyInt NOT NULL")]
		public byte RTU_State
		{
			get
			{
				return this._RTU_State;
			}
			set
			{
				if ((this._RTU_State != value))
				{
					this.OnRTU_StateChanging(value);
					this.SendPropertyChanging();
					this._RTU_State = value;
					this.SendPropertyChanged("RTU_State");
					this.OnRTU_StateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RTU_WSNO", DbType="TinyInt NOT NULL")]
		public byte RTU_WSNO
		{
			get
			{
				return this._RTU_WSNO;
			}
			set
			{
				if ((this._RTU_WSNO != value))
				{
					this.OnRTU_WSNOChanging(value);
					this.SendPropertyChanging();
					this._RTU_WSNO = value;
					this.SendPropertyChanged("RTU_WSNO");
					this.OnRTU_WSNOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RTU_ChanSerial", DbType="SmallInt NOT NULL")]
		public short RTU_ChanSerial
		{
			get
			{
				return this._RTU_ChanSerial;
			}
			set
			{
				if ((this._RTU_ChanSerial != value))
				{
					this.OnRTU_ChanSerialChanging(value);
					this.SendPropertyChanging();
					this._RTU_ChanSerial = value;
					this.SendPropertyChanged("RTU_ChanSerial");
					this.OnRTU_ChanSerialChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RTU_Serial", DbType="SmallInt NOT NULL")]
		public short RTU_Serial
		{
			get
			{
				return this._RTU_Serial;
			}
			set
			{
				if ((this._RTU_Serial != value))
				{
					this.OnRTU_SerialChanging(value);
					this.SendPropertyChanging();
					this._RTU_Serial = value;
					this.SendPropertyChanged("RTU_Serial");
					this.OnRTU_SerialChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RTU_StaNo", DbType="SmallInt")]
		public System.Nullable<short> RTU_StaNo
		{
			get
			{
				return this._RTU_StaNo;
			}
			set
			{
				if ((this._RTU_StaNo != value))
				{
					this.OnRTU_StaNoChanging(value);
					this.SendPropertyChanging();
					this._RTU_StaNo = value;
					this.SendPropertyChanged("RTU_StaNo");
					this.OnRTU_StaNoChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SchoolAreaInfo")]
	public partial class SchoolAreaInfo : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _SAI_ID;
		
		private int _SI_ID;
		
		private string _SAI_Name;
		
		private string _SAI_Remark;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSAI_IDChanging(int value);
    partial void OnSAI_IDChanged();
    partial void OnSI_IDChanging(int value);
    partial void OnSI_IDChanged();
    partial void OnSAI_NameChanging(string value);
    partial void OnSAI_NameChanged();
    partial void OnSAI_RemarkChanging(string value);
    partial void OnSAI_RemarkChanged();
    #endregion
		
		public SchoolAreaInfo()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SAI_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int SAI_ID
		{
			get
			{
				return this._SAI_ID;
			}
			set
			{
				if ((this._SAI_ID != value))
				{
					this.OnSAI_IDChanging(value);
					this.SendPropertyChanging();
					this._SAI_ID = value;
					this.SendPropertyChanged("SAI_ID");
					this.OnSAI_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SI_ID", DbType="Int NOT NULL")]
		public int SI_ID
		{
			get
			{
				return this._SI_ID;
			}
			set
			{
				if ((this._SI_ID != value))
				{
					this.OnSI_IDChanging(value);
					this.SendPropertyChanging();
					this._SI_ID = value;
					this.SendPropertyChanged("SI_ID");
					this.OnSI_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SAI_Name", DbType="VarChar(500) NOT NULL", CanBeNull=false)]
		public string SAI_Name
		{
			get
			{
				return this._SAI_Name;
			}
			set
			{
				if ((this._SAI_Name != value))
				{
					this.OnSAI_NameChanging(value);
					this.SendPropertyChanging();
					this._SAI_Name = value;
					this.SendPropertyChanged("SAI_Name");
					this.OnSAI_NameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SAI_Remark", DbType="VarChar(500)")]
		public string SAI_Remark
		{
			get
			{
				return this._SAI_Remark;
			}
			set
			{
				if ((this._SAI_Remark != value))
				{
					this.OnSAI_RemarkChanging(value);
					this.SendPropertyChanging();
					this._SAI_Remark = value;
					this.SendPropertyChanged("SAI_Remark");
					this.OnSAI_RemarkChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SchoolInfo")]
	public partial class SchoolInfo : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _SI_ID;
		
		private string _SI_Code;
		
		private string _SI_Name;
		
		private string _SI_Address;
		
		private string _SI_Remark;
		
		private System.Nullable<int> _SI_LogOperator;
		
		private System.Nullable<System.DateTime> _SI_CreateDate;
		
		private System.Nullable<int> _SI_UpdateOperator;
		
		private System.Nullable<System.DateTime> _SI_UpdateDate;
		
		private System.Nullable<int> _SI_BuildingArea;
		
		private System.Nullable<int> _SI_GroudArea;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSI_IDChanging(int value);
    partial void OnSI_IDChanged();
    partial void OnSI_CodeChanging(string value);
    partial void OnSI_CodeChanged();
    partial void OnSI_NameChanging(string value);
    partial void OnSI_NameChanged();
    partial void OnSI_AddressChanging(string value);
    partial void OnSI_AddressChanged();
    partial void OnSI_RemarkChanging(string value);
    partial void OnSI_RemarkChanged();
    partial void OnSI_LogOperatorChanging(System.Nullable<int> value);
    partial void OnSI_LogOperatorChanged();
    partial void OnSI_CreateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnSI_CreateDateChanged();
    partial void OnSI_UpdateOperatorChanging(System.Nullable<int> value);
    partial void OnSI_UpdateOperatorChanged();
    partial void OnSI_UpdateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnSI_UpdateDateChanged();
    partial void OnSI_BuildingAreaChanging(System.Nullable<int> value);
    partial void OnSI_BuildingAreaChanged();
    partial void OnSI_GroudAreaChanging(System.Nullable<int> value);
    partial void OnSI_GroudAreaChanged();
    #endregion
		
		public SchoolInfo()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SI_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int SI_ID
		{
			get
			{
				return this._SI_ID;
			}
			set
			{
				if ((this._SI_ID != value))
				{
					this.OnSI_IDChanging(value);
					this.SendPropertyChanging();
					this._SI_ID = value;
					this.SendPropertyChanged("SI_ID");
					this.OnSI_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SI_Code", DbType="VarChar(500)")]
		public string SI_Code
		{
			get
			{
				return this._SI_Code;
			}
			set
			{
				if ((this._SI_Code != value))
				{
					this.OnSI_CodeChanging(value);
					this.SendPropertyChanging();
					this._SI_Code = value;
					this.SendPropertyChanged("SI_Code");
					this.OnSI_CodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SI_Name", DbType="VarChar(500) NOT NULL", CanBeNull=false)]
		public string SI_Name
		{
			get
			{
				return this._SI_Name;
			}
			set
			{
				if ((this._SI_Name != value))
				{
					this.OnSI_NameChanging(value);
					this.SendPropertyChanging();
					this._SI_Name = value;
					this.SendPropertyChanged("SI_Name");
					this.OnSI_NameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SI_Address", DbType="VarChar(500)")]
		public string SI_Address
		{
			get
			{
				return this._SI_Address;
			}
			set
			{
				if ((this._SI_Address != value))
				{
					this.OnSI_AddressChanging(value);
					this.SendPropertyChanging();
					this._SI_Address = value;
					this.SendPropertyChanged("SI_Address");
					this.OnSI_AddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SI_Remark", DbType="VarChar(500)")]
		public string SI_Remark
		{
			get
			{
				return this._SI_Remark;
			}
			set
			{
				if ((this._SI_Remark != value))
				{
					this.OnSI_RemarkChanging(value);
					this.SendPropertyChanging();
					this._SI_Remark = value;
					this.SendPropertyChanged("SI_Remark");
					this.OnSI_RemarkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SI_LogOperator", DbType="Int")]
		public System.Nullable<int> SI_LogOperator
		{
			get
			{
				return this._SI_LogOperator;
			}
			set
			{
				if ((this._SI_LogOperator != value))
				{
					this.OnSI_LogOperatorChanging(value);
					this.SendPropertyChanging();
					this._SI_LogOperator = value;
					this.SendPropertyChanged("SI_LogOperator");
					this.OnSI_LogOperatorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SI_CreateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> SI_CreateDate
		{
			get
			{
				return this._SI_CreateDate;
			}
			set
			{
				if ((this._SI_CreateDate != value))
				{
					this.OnSI_CreateDateChanging(value);
					this.SendPropertyChanging();
					this._SI_CreateDate = value;
					this.SendPropertyChanged("SI_CreateDate");
					this.OnSI_CreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SI_UpdateOperator", DbType="Int")]
		public System.Nullable<int> SI_UpdateOperator
		{
			get
			{
				return this._SI_UpdateOperator;
			}
			set
			{
				if ((this._SI_UpdateOperator != value))
				{
					this.OnSI_UpdateOperatorChanging(value);
					this.SendPropertyChanging();
					this._SI_UpdateOperator = value;
					this.SendPropertyChanged("SI_UpdateOperator");
					this.OnSI_UpdateOperatorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SI_UpdateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> SI_UpdateDate
		{
			get
			{
				return this._SI_UpdateDate;
			}
			set
			{
				if ((this._SI_UpdateDate != value))
				{
					this.OnSI_UpdateDateChanging(value);
					this.SendPropertyChanging();
					this._SI_UpdateDate = value;
					this.SendPropertyChanged("SI_UpdateDate");
					this.OnSI_UpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SI_BuildingArea", DbType="Int")]
		public System.Nullable<int> SI_BuildingArea
		{
			get
			{
				return this._SI_BuildingArea;
			}
			set
			{
				if ((this._SI_BuildingArea != value))
				{
					this.OnSI_BuildingAreaChanging(value);
					this.SendPropertyChanging();
					this._SI_BuildingArea = value;
					this.SendPropertyChanged("SI_BuildingArea");
					this.OnSI_BuildingAreaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SI_GroudArea", DbType="Int")]
		public System.Nullable<int> SI_GroudArea
		{
			get
			{
				return this._SI_GroudArea;
			}
			set
			{
				if ((this._SI_GroudArea != value))
				{
					this.OnSI_GroudAreaChanging(value);
					this.SendPropertyChanging();
					this._SI_GroudArea = value;
					this.SendPropertyChanged("SI_GroudArea");
					this.OnSI_GroudAreaChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
